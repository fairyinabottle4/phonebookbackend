{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/Persons.js","components/Entry.js","components/Numbers.js","components/Notification.js","App.js","index.js"],"names":["Filter","string","func","value","onChange","PersonForm","action","newName","newNumber","handleName","handleNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Entry","entry","name","number","onClick","window","confirm","personService","Numbers","namesToShow","map","Notification","message","success","includes","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","useEffect","initialPersons","setNewName","setNewNumber","searchString","setSearchString","showAll","setShowAll","showSuccess","setShowSuccess","filter","person","toLowerCase","getID","find","event","target","preventDefault","element","phonebookEntry","date","Date","toISOString","console","log","returnedPerson","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09769ec0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({string, func}) => {\n    return (\n        <form>\n            <div>filter shown with <input value={string} onChange={func}/></div>\n        </form>\n    )\n}\n\n\n\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({action, newName, newNumber, handleName, handleNumber}) => {\n    return (\n        <form onSubmit={action}>\n            <div>name: <input value={newName} onChange={handleName}/></div>\n            <div>number: <input value={newNumber} onChange={handleNumber}/></div>\n            <div><button type=\"submit\">add</button></div>\n        </form>\n\n    )\n}\n\n\n\n\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const deleteEntry = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n  \n  export default { getAll, create, update, deleteEntry }\n  \n\n","import React from 'react'\nimport personService from './../services/Persons'\n\n\nconst Entry = ({entry}) => {\n\n  const handleDelete = () => {\n    if (window.confirm(`Delete ${entry.name}?`)) {\n      personService.deleteEntry(entry.id)\n    }\n  }\n  \n  return (\n      <li>{entry.name} {entry.number} <button onClick={handleDelete}>delete</button></li>\n    )\n  }\n\nexport default Entry","import React from 'react'\nimport Entry from './Entry'\n\n\nconst Numbers = ({namesToShow}) => {\n    return (\n        <ul>{namesToShow.map(name => <Entry key={name.id} entry={name}/>)}</ul>\n    )\n}\n\n\n\nexport default Numbers","import react from 'react'\n\nconst Notification = ({ message }) => {\n\n    if (message === null) {\n      return null\n    }\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const successStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const success = message.includes(\"Added\") || message.includes(\"Updated\")\n\n    return (\n      <div style={success ? successStyle : errorStyle}>\n        {message}\n      </div>\n    )\n  }\n  \n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Numbers from './components/Numbers'\nimport personService from './services/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  })\n\n  //this one is purely for the input text box\n  const [ newName, setNewName ] = useState('')\n\n  const [ newNumber, setNewNumber] = useState('')\n\n  const [ searchString, setSearchString] = useState('')\n\n  const [ showAll, setShowAll] = useState(true)\n\n  const [ showSuccess, setShowSuccess] = useState(null)\n\n  const namesToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(searchString.toLowerCase()))\n\n  const getID = (name) => {\n    const personObject =  persons.find(person => name === person.name ? person.id : \"\")\n    return personObject.id\n  }\n\n  //when the button is pressed and the form is submitted, this function will create\n  //a new entry and add it to the existing array\n  const addName = (event) => {\n    event.preventDefault()\n    const isDuplicate = persons.find(element => element.name === newName)\n    if (isDuplicate) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n          const phonebookEntry = {\n            name: newName,\n            number: newNumber,\n            date: new Date().toISOString(),\n          }\n          console.log(getID(newName))\n          personService.update(getID(newName) ,phonebookEntry)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson))\n              setNewName(\"\")\n              setNewNumber(\"\")\n              setShowSuccess(`Updated ${newName}`)\n              setTimeout(() => {\n                setShowSuccess(null)\n              }, 5000)        \n            })\n            .catch(error => {\n              setShowSuccess(`Information of ${newName} has already been removed from the server`)\n              setTimeout(() => {\n                setShowSuccess(null)\n              }, 5000)\n            })\n        }\n    } else {\n      const phonebookEntry = {\n        name: newName,\n        number: newNumber,\n        date: new Date().toISOString(),\n      }\n      personService.create(phonebookEntry)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          setShowSuccess(`Added ${newName}`)\n          setTimeout(() => {\n            setShowSuccess(null)\n          }, 5000)    \n        })\n        .catch(error => {\n          setShowSuccess(`Information of ${newName} has already been removed from the server`)\n          setTimeout(() => {\n            setShowSuccess(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleAddName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleAddNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setSearchString(event.target.value)\n    setShowAll(false)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={showSuccess}/>\n\n      <Filter string={searchString} func={handleFilter}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm action={addName} newName={newName} newNumber={newNumber} \n      handleName={handleAddName} handleNumber={handleAddNumber} />\n\n      <h3>Numbers</h3>\n      <Numbers namesToShow={namesToShow} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}